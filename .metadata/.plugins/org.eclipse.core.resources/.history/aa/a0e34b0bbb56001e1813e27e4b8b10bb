package kr.or.ddit.servlet06;

import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.or.ddit.db.ConnectionFactory;
import kr.or.ddit.vo.DataBasePropertyVO;

@WebServlet("/13/jdbcDesc.do")
public class DataBasePropertiesControllerServlet extends HttpServlet{
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		StringBuffer sb = new StringBuffer();
		List<DataBasePropertyVO> list = new ArrayList<>();
		try(
			Connection conn = ConnectionFactory.getConnection();
			Statement stmt =  conn.createStatement();
		){
		
			StringBuffer sql = new StringBuffer();
			sql.append("	select property_name, property_value, description ");
			sql.append("	from database_properties                          ");
			ResultSet rs =  stmt.executeQuery(sql.toString());
		//		ResultSetMetaData rsmd = rs.getMetaData();
			while(rs.next()){
				Map<String,Object> record = new HashMap<>();
				DataBasePropertyVO vo = new DataBasePropertyVO();
				vo.setPropertyName(rs.getString("property_name".toUpperCase()));
				vo.setPropertyValue(rs.getString("property_value".toUpperCase()));
				vo.setDescription(rs.getString("description".toUpperCase()));
				list.add(vo);
			}
			
		} catch (SQLException e) {
			throw new IOException(e);
		}
		
		
		String goPage = "/WEB-INF/13/jdbcDesc.jsp";
		req.setAttribute("list", list);
		
		if(goPage.startsWith("redirect:")) {
			String location = req.getContextPath() + goPage.substring("redirect:".length());
			resp.sendRedirect(location);
		}else {
			req.getRequestDispatcher(goPage).forward(req, resp);
		}
		
	}
}
